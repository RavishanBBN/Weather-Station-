import time
import board
import busio
import json
import paho.mqtt.client as mqtt
from adafruit_bmp280 import Adafruit_BMP280_I2C
from adafruit_ads1x15.ads1115 import ADS1115
from adafruit_ads1x15.analog_in import AnalogIn

mqtt_broker = "192.168.x.x"
mqtt_port = 1883
mqtt_topic = "sensor_data"

client = mqtt.Client()
client.connect(mqtt_broker, mqtt_port)

i2c = busio.I2C(board.SCL, board.SDA)

bmp280 = Adafruit_BMP280_I2C(i2c, address=0x76)

ads = ADS1115(i2c, address=0x48)
ads.gain = 1

mq7 = AnalogIn(ads, 0)
mq135 = AnalogIn(ads, 1)

def calculate_co_level(voltage):
    return round(voltage * 100, 2)

def calculate_hazardous_level(voltage):
    return round(voltage * 200, 2)

try:
    while True:
        temperature = round(bmp280.temperature, 2)
        pressure = round(bmp280.pressure, 2)

        mq7_voltage = mq7.voltage
        mq135_voltage = mq135.voltage

        co_level = calculate_co_level(mq7_voltage)
        hazardous_level = calculate_hazardous_level(mq135_voltage)

        payload = {
            "temperature": temperature,
            "pressure": pressure,
            "co_level": co_level,
            "hazardous_level": hazardous_level,
        }

        json_payload = json.dumps(payload)

        client.publish(mqtt_topic, json_payload)
        print(f"Published: {json_payload}")

        time.sleep(2)

except KeyboardInterrupt:
    print("\nExiting...")
